class Node:
    def __init__(self, data):  # Node definition
        self.data = data
        self.prev = None
        self.next = None

class Solution:
    def sortedInsert(self, head, x):
        new_node = Node(x)

        # Case 1: Insert at beginning (before head)
        if head is None or x < head.data:
            new_node.next = head
            if head:
                head.prev = new_node
            return new_node  # New node becomes new head

        # Traverse to find insertion point
        current = head
        while current.next and current.next.data < x:
            current = current.next

        # Insert after current
        new_node.next = current.next
        new_node.prev = current

        if current.next:
            current.next.prev = new_node
        current.next = new_node

        return head
